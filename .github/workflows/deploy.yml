name: üöÄ Auto Deploy to Railway

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      actions: write

    steps:
      # Step 1: Checkout Repository
      - name: üì• Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 1  # Fetch only the latest commit for efficiency

      # Step 2: Debug Secrets (Ensure Required Secrets Exist)
      - name: üîë Check Secrets
        run: |
          if [[ -z "${{ secrets.RAILWAY_TOKEN }}" ]]; then
            echo "‚ùå RAILWAY_TOKEN is missing! Add it in GitHub Secrets."
            exit 1
          fi
          echo "‚úÖ RAILWAY_TOKEN is set."

      # Step 3: Trigger Deployment via Railway API
      - name: üöÄ Trigger Deployment via Railway API
        run: |
          RESPONSE=$(curl -s -o response.json -w "%{http_code}" -X POST "https://backboard.railway.app/graphql/v2" \
            -H "Content-Type: application/json" \
            -H "Authorization: Bearer ${{ secrets.RAILWAY_TOKEN }}" \
            --data-raw '{"query":"mutation { deployProject(id: \"6794a5bd-f6b0-46b2-a199-506694340d97\", service: \"splendid-commitment\") { id } }"}')

          if [[ "$RESPONSE" == "200" ]]; then
            echo "‚úÖ Deployment triggered successfully!"
            exit 0
          else
            echo "‚ùå Deployment failed (HTTP $RESPONSE). Debugging..."
            cat response.json
            exit 1
          fi

      # Step 4: Fetch Deployment Logs (if Failure Occurs)
      - name: üïµÔ∏è Fetch Deployment Logs (if Failed)
        if: failure()
        run: |
          echo "üö® Deployment failed. Fetching logs..."
          curl -X POST "https://backboard.railway.app/graphql/v2" \
            -H "Content-Type: application/json" \
            -H "Authorization: Bearer ${{ secrets.RAILWAY_TOKEN }}" \
            --data-raw '{"query":"{ project(id: \"6794a5bd-f6b0-46b2-a199-506694340d97\") { id logs { tail } } }"}'
